version: '3.8'

services:

  backend-service:
    build:
      context: ./services/backend
    image: gameinfopipeline-backend
    ports: 
      - "8000:8000"

    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

    volumes:
      - ${MODEL_PATH}:/models

    env_file:
      - ./services/backend/.env

    networks:
      - game-app-network


  frontend-service:
    build:
      context: ./services/frontend 
    image: gameinfopipeline-frontend
    ports: 
      - "5000:5000"

    env_file:
      - ./services/frontend/.env

    networks:
      - game-app-network

    depends_on:
      - backend-service

  prometheus-service:
    image: prom/prometheus:latest
    container_name: prometheus-service
    ports:
      - "9090:9090" # Exposing the Prometheus UI on port 9090
    volumes:
       # Mounting the configuration file I created into the container at the path where Prometheus expects it.
      - ./prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
    command:
      # Telling Prometheus to use my configuration file.
      - '--config.file=/etc/prometheus/prometheus.yaml'
    networks:
      - game-app-network
    depends_on:
      # Wait for the apps to be up before starting to scrape them.
      - backend-service
      - frontend-service

  grafana-service:
    image: grafana/grafana-oss:latest
    container_name: grafana-service
    ports:
      - "3000:3000" # Exposing the Grafana UI on port 3000
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - game-app-network
    depends_on:
      - prometheus-service # Grafana needs Prometheus to be available as a data source.

networks:
  game-app-network:
    driver: bridge

# Named volume for Grafana
volumes:
  grafana-storage: